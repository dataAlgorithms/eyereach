1. mp4 to flv
ffmpeg -i speed.mp4 -c copy  speed.flv

2. concat
[root@newisscenter ffmpegBin]# cat concat.txt 
file '/root/ffmpegBin/speed.mp4'
file '/root/ffmpegBin/speed.mp4'
[root@newisscenter ffmpegBin]# ./ffmpeg -f concat -i concat.txt -c copy -f flv rtmp://192.168.32.217:1936/httpflv?vhost=smsupper/stream

3. rtmp to mp4
./ffmpeg -i rtmp://admin:123456@192.168.32.218:1935/live?vhost=www.chinache.hls.com/stream -c copy -map 0 
     -f segment -segment_time 100 -segment_format mp4 "out%03d.mp4"

4. ffmpeg debug
[root@hlssource sbin]# ./ffmpeg -re -fdebug ts -i rtmp://116.251.231.12/tz22/8-221 -c copy  -y -f flv test_source.flv
ffmpeg version 3.2 Copyright (c) 2000-2016 the FFmpeg developers
  built with gcc 4.1.2 (GCC) 20080704 (Red Hat 4.1.2-55)
  configuration: --disable-shared --enable-static
  libavutil      55. 34.100 / 55. 34.100
  libavcodec     57. 64.100 / 57. 64.100
  libavformat    57. 56.100 / 57. 56.100
  libavdevice    57.  1.100 / 57.  1.100
  libavfilter     6. 65.100 /  6. 65.100
  libswscale      4.  2.100 /  4.  2.100
  libswresample   2.  3.100 /  2.  3.100
 matched as AVOption 'fdebug' with argument 'ts'.
Reading option '-i' ... matched as input file with argument 'rtmp://116.251.231.12/tz22/8-221'.
Reading option '-c' ... matched as option 'c' (codec name) with argument 'copy'.
Reading option '-y' ... matched as option 'y' (overwrite output files) with argument '1'.
Reading option '-f' ... matched as option 'f' (force format) with argument 'flv'.
Reading option 'test_source.flv' ... matched as output file.
Finished splitting the commandline.
Parsing a group of options: global .
Applying option y (overwrite output files) with argument 1.
Successfully parsed a group of options.
Parsing a group of options: input file rtmp://116.251.231.12/tz22/8-221.
Applying option re (read input at native frame rate) with argument 1.
Successfully parsed a group of options.
Opening an input file: rtmp://116.251.231.12/tz22/8-221.
[rtmp @ 0x115a3d60] No default whitelist set
[tcp @ 0x115a3c40] No default whitelist set
[rtmp @ 0x115a3d60] Handshaking...
[rtmp @ 0x115a3d60] Type answer 3
[rtmp @ 0x115a3d60] Server version 3.5.2.1
[rtmp @ 0x115a3d60] Proto = rtmp, path = /tz22/8-221, app = tz22, fname = 8-221

5. Pure video or audio get
ffmpeg -i input-video.avi -vn -acodec copy output-audio.aac (pure audio)
ffmpeg -i input-video.avi -an -vcodec copy output-video.flv (pure video)

6. 视频提取图片
****************************
使用ffmpeg从视频中截取图像帧
1. 问题
从视频中抽取图像帧，并按照指定命名规则保存。
2. 环境
centos 6.3 + ffmpeg 0.6.5
3. 方法
1）安装ffmpeg
ffmpeg 位于rpmforge中，如果你的centos没有配置rpmforge，请先配置rpmforge。
yum -y install ffmpeg
并安装对应的依赖包。
2）使用场景
        1. ffmpeg -i inputfile.avi -r 1 -f image2 image-%05d.jpeg
-r 指定抽取的帧率，即从视频中每秒钟抽取图片的数量。1代表每秒抽取一帧。
-f 指定保存图片使用的格式，可忽略。
image-%05d.jpeg，指定文件的输出名字。
2.  ffmpeg -i inputfile.avi -r 1  -s 4cif -f image2 image-%05d.jpeg
4cif 代表帧的尺寸为705x576.其他可用尺寸如下。
3. ffmpeg -i inputfile.avi -r 1 -t 4 -f image2 image-%05d.jpeg
-t 代表持续时间，单位为秒。
4. ffmpeg -i inputfile.avi -r 1  -ss 01:30:14 -f image2 image-%05d.jpeg
-ss 指定起始时间
5.ffmpeg -i inputfile.avi -r 1  -ss 01:30:14 -vframes120 4cif -f image2 image-%05d.jpeg
-vframes 指定抽取的帧数
**********************
