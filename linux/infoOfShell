1. 查询文件(按名字,按文件内容,按文件大小)
# find file by size
find / -type f -size +1G

# find file by content
grep -rnw '/usr/local/sms/conf' -e "smsupper"

eg.
[root@newissupper ~]# grep -rnw '/usr/local/sms/conf' -e "smsupper"
/usr/local/sms/conf/smsupper.conf:33:        server_name smsupper;
/usr/local/sms/conf/smsupper.conf:105:            set $reqip_host smsupper;                            
/usr/local/sms/conf/smsupper.conf:131:        server_name smsupper;
/usr/local/sms/conf/issupper.conf:35:        server_name smsupper;
/usr/local/sms/conf/issupper.conf:96:        server_name smsupper;

or

[root@newissupper ~]# find /usr/local/sms/conf -type f  -exec grep -al 'smsupper' {} \;
/usr/local/sms/conf/smsupper.conf
/usr/local/sms/conf/issupper.conf
/usr/local/sms/conf/streamReport.conf
/usr/local/sms/conf/nginx.conf.rpmsave
/usr/local/sms/conf/core/core.21638
/usr/local/sms/conf/core/core.21602
/usr/local/sms/conf/rtmpauth.conf
/usr/local/sms/conf/timecode.conf
/usr/local/sms/conf/smsupper_mul.conf

# find file by name(substring)
find / -type f -name "*sms*"

eg.
[root@newissupper ~]# find / -type f -name "*sms*"
/root/soft/sms-2.1.37-1-r43604.x86_64.rpm
/root/soft/sms-2.2.21-2-r54392.x86_64.rpm
/root/soft/sms-2.1.82-2-r48264.x86_64.rpm
/root/soft/sms-2.1.52-2-r45218.x86_64.rpm

2. 进制转换
//10进制转2进制：
$ echo "obase=2;ibase=10;100" | bc
1100100
//10进制转16进制：
$ echo "obase=16;ibase=10;100" | bc
 64
//16进制转10进制：
$ echo "ibase=16;obase=2;F1" | bc
11110001

3. 查询文件/文件夹相关命令
// 查询文件占用空间
du -lh|sort -rn
// Linux统计某文件夹下文件、文件夹的个数
统计某文件夹下文件的个数
ls -l |grep "^-"|wc -l

统计某文件夹下目录的个数
ls -l |grep "^d"|wc -l

统计文件夹下文件的个数，包括子文件夹里的
ls -lR|grep "^-"|wc -l

如统计/home/han目录(包含子目录)下的所有js文件则：
ls -lR /home/han|grep js|wc -l 或 ls -l "/home/han"|grep "js"|wc -l

统计文件夹下目录的个数，包括子文件夹里的
ls -lR|grep "^d"|wc -l
说明：
ls -lR
长列表输出该目录下文件信息(R代表子目录注意这里的文件，不同于一般的文件，可能是目录、链接、设备文件等)

grep "^-"
这里将长列表输出信息过滤一部分，只保留一般文件，如果只保留目录就是 ^d

wc -l
统计输出信息的行数，因为已经过滤得只剩一般文件了，所以统计结果就是一般文件信息的行数，又由于一行信息对应一个文件，所以也就是文件的个数。
 
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
如果只查看文件夹
ls -d  只能显示一个.
find -type d    可以看到子文件夹
ls -lF |grep /    或 ls -l |grep '^d'  只看当前目录下的文件夹，不包括往下的文件夹

4. 批量替换文件内容
grep oldString -rl /path | xargs sed -i "s/oldString/newString/g"

5. linux快速获取文件时间戳
date +%s -d "`stat 0.ts|grep Modify|cut -c 9-27`"

6. linux显示文件(按时间升序或者降序)
升序: ls -lt
降序: ls -lt|tac

7. 批量kill进程
ps -ef|grep -E "limit|ffmpeg"|grep -v grep|cut -c 9-15|xargs kill -9 

8. 提取文件按列的数据
awk '$1 > 1 && $2 > 100' hihao.txt 

9. 查看进程的线程
ps -T -p 5065 (5065为进程pid)

10. 压缩解压
命令格式：tar -zxvf 【压缩包文件名.tar.gz】 -C  【路径】/
注释：解压.tar.gz格式到指定的目录下
例如：tar -zxvf japan.tar.gz -C /tmp/


命令格式：tar -jxvf 【压缩包文件名.tar.bz2】 -C  【路径】/
注释：解压.tar.bz2格式到指定的目录下
例如：tar -jxvf japan.tar.bz2 -C /tmp/


压缩.tar.gz格式到指定目录下
命令格式：tar -zcvf 【目录】/ 【压缩包文件名.tar.gz】【源文件】
例如：tar -zcvf /tmp/test.tar.gz japan/
注意：一次压缩多个文件直接在源文件后用空格格开即可


压缩.tar.bz2格式到指定目录下
命令格式：tar -jcvf 【目录】/ 【压缩包文件名.tar.gz】【源文件】
例如：tar -jcvf /tmp/test.tar.bz2 japan/
注意：一次压缩多个文件直接在源文件后用空格格开即可

11. 获取nginx运行时长
ps -p `ps ax|grep nginx|grep master|grep -v grep|cut -c -5` -o etime=
或者
[root@newissupper logs]# ps -p `cat /usr/local/sms/logs/nginx.pid` -o etime=
      12:40
      
 [root@gasdb2 Transsoft]# ps -eo pid,lstart,etime | grep 5359
 5359 Tue Sep 16 14:47:22 2014       00:43

12. chkconfig
chkconfig

服务在/etc/rc.d/init.d下面
使用说明:
chkconfig命令主要用来更新（启动或停止）和查询系统服务的运行级信息。谨记chkconfig不是立即自动禁止或激活一个服务，它只是简单的改变了符号连接。

使用语法：
chkconfig [--add][--del][--list][系统服务] 或 chkconfig [--level <等级代号>][系统服务][on/off/reset]

chkconfig在没有参数运行时，显示用法。如果加上服务名，那么就检查这个服务是否在当前运行级启动。如果是，返回true，否则返回false。如果在服务名后面指定了on，off或者reset，那么chkconfi 会改变指定服务的启动信息。on和off分别指服务被启动和停止，reset指重置服务的启动信息，无论有问题的初始化脚本指定了什么。on和off开关，系统默认只对运行级3，4，5有效，但是reset可以对所有运行级有效。

参数用法：
   --add 　增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据。
   --del 　删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据。
   --level<等级代号> 　指定读系统服务要在哪一个执行等级中开启或关毕。
      等级0表示：表示关机
      等级1表示：单用户模式
      等级2表示：无网络连接的多用户命令行模式
      等级3表示：有网络连接的多用户命令行模式
      等级4表示：不可用
      等级5表示：带图形界面的多用户模式
      等级6表示：重新启动
      需要说明的是，level选项可以指定要查看的运行级而不一定是当前运行级。对于每个运行级，只能有一个启动脚本或者停止脚本。当切换运行级时，init不会重新启动已经启动的服务，也不会再次去停止已经停止的服务。

    chkconfig --list [name]：显示所有运行级系统服务的运行状态信息（on或off）。如果指定了name，那么只显示指定的服务在不同运行级的状态。
    chkconfig --add name：增加一项新的服务。chkconfig确保每个运行级有一项启动(S)或者杀死(K)入口。如有缺少，则会从缺省的init脚本自动建立。
    chkconfig --del name：删除服务，并把相关符号连接从/etc/rc[0-6].d删除。
    chkconfig [--level levels] name：设置某一服务在指定的运行级是被启动，停止还是重置。

运行级文件：
每个被chkconfig管理的服务需要在对应的init.d下的脚本加上两行或者更多行的注释。第一行告诉chkconfig缺省启动的运行级以及启动和停止的优先级。如果某服务缺省不在任何运行级启动，那么使用 - 代替运行级。第二行对服务进行描述，可以用\ 跨行注释。
例如，random.init包含三行：
# chkconfig: 2345 20 80
# description: Saves and restores system entropy pool for \
# higher quality random number generation.

使用范例：
chkconfig --list        #列出所有的系统服务
chkconfig --add httpd        #增加httpd服务
chkconfig --del httpd        #删除httpd服务
chkconfig --level httpd 2345 on        #设置httpd在运行级别为2、3、4、5的情况下都是on（开启）的状态
chkconfig --list        #列出系统所有的服务启动情况
chkconfig --list mysqld        #列出mysqld服务设置情况
chkconfig --level 35 mysqld on        #设定mysqld在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭
chkconfig mysqld on        #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级

如何增加一个服务：
1.服务脚本必须存放在/etc/ini.d/目录下；
2.chkconfig --add servicename
    在chkconfig工具服务列表中增加此服务，此时服务会被在/etc/rc.d/rcN.d中赋予K/S入口了；
3.chkconfig --level 35 mysqld on
    修改服务的默认启动等级。

13. crontab 按秒
http://blog.csdn.net/fdipzone/article/details/22701113

14. 查询top5 (依次按cpu,内存排序)
ps -eo pcpu,pmem,vsize,pid,cmd | sort -k 1 -nr | head -5


15. 竖列相加
[root@newisscenter ~]# lsof -n|awk '{print $2}'|sort|uniq -c |sort -nr|cat|grep -E "4958|4960"|awk 'BEGIN{COUNT=0}COUNT+=$1;END{print COUNT}'
    937 4960
    812 4958
1749

16. linux下监控进程带宽
https://centos.pkgs.org/6/epel-x86_64/nethogs-0.8.5-1.el6.x86_64.rpm.html
https://centos.pkgs.org/5/epel-x86_64/nethogs-0.7-3.20080627cvs.el5.x86_64.rpm.html

17. 按列排序
netstat -anlp|grep nginx|grep ES|grep -v 127.0.0.1|sort -k5

18. 按列排序后按某列合并汇总
 netstat -anlp|grep nginx|grep ES|grep -v 127.0.0.1|sort -k5|awk {'print $5'}|cut -d ":" -f1| awk '{s[$1] += 1}END{ for(i in s){  print i, s[i] } }' 
 
19. 获取指定进程的cpu, 内存
[root@CHN-CA-d-3WG conf]# ps -p 94307 -o %cpu,%mem,cmd (按pid)
%CPU %MEM CMD
16.2  0.3 nginx: worker process                  

[root@CHN-CA-d-3WG conf]# ps -C nginx -o %cpu,%mem,cmd (按进程名字)
%CPU %MEM CMD
 0.0  0.3 nginx: master process /usr/local/sms/sbin/nginx -c /usr/local/sms/conf/nginx.conf
 7.3  0.2 nginx: worker process is shutting down                     
12.4  0.2 nginx: worker process is shutting down                     
16.4  0.2 nginx: worker process is shutting down                     
17.5  0.2 nginx: worker process is shutting down                     
16.2  0.3 nginx: worker process                                      
 0.6  0.3 nginx: worker process                                      
 0.7  0.3 nginx: worker process                                      
 1.0  0.3 nginx: worker process                                      
 0.0  0.3 nginx: cache manager process   
 
20. 查询指定进程的内存
top -bn1 | sed -n '/nginx/p'

21. 查看linux进程链接状态
[root@CHN-CA-j-3W2 ~]# netstat -n |awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'
TIME_WAIT 29
SYN_SENT 1
FIN_WAIT1 1
ESTABLISHED 60
LAST_ACK 1

22. 查看网卡带宽 
[root@localhost data]# dmesg|grep eth0
e1000 0000:02:01.0: eth0: (PCI:66MHz:32-bit) 00:0c:29:15:0e:1f
e1000 0000:02:01.0: eth0: Intel(R) PRO/1000 Network Connection
e1000: eth0 NIC Link is Up 1000 Mbps Full Duplex, Flow Control: None
eth0: no IPv6 routers present
8021q: adding VLAN 0 to HW filter on device eth0
eth0: no IPv6 routers present

23. 拷贝特定数量(比如100个)到另一个文件夹
find . -name "*.txt" |head -100 | xargs -i cp {}  /tmp   
